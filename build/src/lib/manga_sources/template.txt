/**
 * Takes in a query, and returns an object with the extention name and data.
 * 
 * @param {string} query - String to be used to query the source
 * 
 * @returns {Array<{
 *      id: string,
 *      title: string,
 *      img: string,
 *      extention: string,
 *      authors: string,
 *      artists: string,
 *      description: string,
 *      chapters: Array<{
 *          id: string,
 *          num: number,
 *          title: string,
 *          page: number
 *      }>
 * }>} 
 */
export async function search(query) {
    let body = await fetch(`https://${link}?${search/query}=${query}`);
    let res = await body.text();
    let data = [];

    return data;
}

/**
 * Takes in an id that the source can use to retrieve the chapter details for a series.
 * 
 * @param {string} id - String of the id of a given manga. Used for finding the website details
 * @returns {Array<{
 *      id: string,
 *      number: number,
 *      title: string,
 *      page: number
 * }>} - Array chapter details
 */
export async function getChapters(id) {
    let body = await fetch(`https://${link}`);
    let res = await body.text();
    let data = [];
    
    return data;
}

/**
 * Takes in an id that the source can use to retrieve the chapter pages for a series.
 * 
 * @param {string} id - String to be used to query the source
 * 
 * @returns {Array<string>} 
 */
export async function getChapterPages(id) {
    let body = await fetch(`https://${link}`);
    let res = await body.text();
    let data = [];
    
    return data;
}