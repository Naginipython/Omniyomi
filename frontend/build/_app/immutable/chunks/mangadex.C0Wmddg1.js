async function d(i){let s=[],a=await(await fetch(`https://api.mangadex.org/manga?limit=100&includes[]=cover_art&includes[]=author&includes[]=artist&title=${i}`)).json();for(let r of a.data){let t={};t.id=r.id,t.title=r.attributes.title.en;let l=r.relationships.filter(e=>e.type=="cover_art")[0];t.img=`https://uploads.mangadex.org/covers/${t.id}/${l.attributes.fileName}`,t.extention="MangaDex",t.description=r.attributes.description.en,t.chapters=[];let o=r.relationships.filter(e=>e.type=="author").map(e=>e.attributes.name),p=r.relationships.filter(e=>e.type=="artist").map(e=>e.attributes.name);t.authors=o.join(", "),t.artists=p.join(", "),s.push(t)}return s}async function h(i){return(await(await fetch(`https://api.mangadex.org/manga/${i}/feed?limit=500&order[chapter]=asc&translatedLanguage[]=en`)).json()).data.map(a=>({number:parseInt(a.attributes.chapter),id:a.id,title:a.attributes.title==""||a.attributes.title==null?`Chapter ${a.attributes.chapter}`:a.attributes.title,page:1,completed:!1}))}async function u(i){let n=await(await fetch(`https://api.mangadex.org/at-home/server/${i}`)).json(),a=n.chapter.hash;return n.chapter.data.map(t=>`https://uploads.mangadex.org/data/${a}/${t}`)}export{u as getChapterPages,h as getChapters,d as search};
